#include <windows.h>
#ifdef __APPLE__
#include <GLUT/glut.h>
#else
#include <GL/glut.h>
#endif
#include<cmath>
#include <stdlib.h>
#define M_PI 3.1415

float blanco[]={1,1,1};
float negro[]={0,0,0},azul[]={0,0,1};
float rojo[]={1,0,0},verde[]={0,1,0}, amarillo[]={1,1,0};
float cyan[]={0,1,1}, rosa[]={1,0.5,0.5}, naranja[]={1,0.8,0}, gris[]={0.6,0.6,0.6};

void inicio ()
{
    glMatrixMode(GL_PROJECTION);
    int a=15;
    gluOrtho2D(-a,a,-a,a);
}

void circulos (float *XY, float r, int k, int m, float theta1, float theta2, float n, float *color, float l,float p)
{
    glColor3fv(color);
    switch (k)
    {
        case 1: {glPolygonMode(GL_FRONT_AND_BACK, GL_POINT); glPointSize(p); break;}
        case 2: {glPolygonMode(GL_FRONT_AND_BACK, GL_LINE); glLineWidth(l); break;}
        case 3: {glPolygonMode(GL_FRONT_AND_BACK, GL_FILL);break;}
    }

    glBegin(GL_POLYGON);

    for(float i=0;i<n;i++)
    {
        for (float T=theta1 ; T<theta2 ;T=T+0.01)
        {
            switch (m)
            {
                case 1: glVertex2f(r*cos(T)+XY[0],r*sin(T)+XY[1]+2*r*i); break;
                case 2: glVertex2f(r*cos(T)+XY[0]+2*r*i,r*sin(T)+XY[1]); break;
                case 3: glVertex2f(r*cos(T)+XY[0],r*sin(T)+XY[1]);break;
            }
        }
    }
    glEnd();
}

void display(void)
{
    glClearColor(1,1,1,1);
    glClear(GL_COLOR_BUFFER_BIT);

    float a[]={0,0};
    circulos(a,8,2,3,0,2*M_PI,8,negro,3,3);

    for (int j=0; j<8;j++){
        float b[]={8*cos(j*M_PI/4),8*sin(j*M_PI/4)};
        circulos(b,sqrt(9.42),2,3,0,2*M_PI,8,negro,3,3);
        circulos(b,sqrt(9.42/2),2,3,0,2*M_PI,8,negro,3,3);
        circulos(b,sqrt(9.42/4),2,3,0,2*M_PI,8,negro,3,3);
    }







    glutSwapBuffers();
}


int main(int argc, char *argv[])
{
    glutInit(&argc, argv); //Inicializar la ventana

    glutInitDisplayMode(GLUT_RGB|GLUT_DOUBLE|GLUT_DEPTH);//Especifica el tipo de modo de visualizacion al crear una ventana(Activa el buffer de colores de tipo RGB

    glutInitWindowPosition(10,10);//Posicion de la ventana
    glutInitWindowSize(600,600); //TamaÃ±o de la ventana
    glutCreateWindow("EstrellaRara"); //Nombre que se le da a la ventana
    glutDisplayFunc(display);


    inicio();


    glutMainLoop(); //Hace que aparezca la ventana
    return EXIT_SUCCESS; //Puedes colocar tambien Return 0

}
